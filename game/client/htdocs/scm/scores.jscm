;; -*- mode: scheme; -*-
;; Why We Love Wasps Copyright (C) 2019 FoAM Kernow
;;
;; This program is free software: you can redistribute it and/or modify
;; it under the terms of the GNU Affero General Public License as
;; published by the Free Software Foundation, either version 3 of the
;; License, or (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU Affero General Public License for more details.
;;
;; You should have received a copy of the GNU Affero General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;; lasted time
;; number of mutations
;; number cells spawned
;; number of viruses spawned
;; number of infections
;; hosts at the end
;; viruses at the end

(define (game-scores total survived duration mutations hosts-spawned
					 viruses-spawned
					 infections max-hosts max-viruses
					 final-hosts final-viruses)
  (list total survived duration mutations hosts-spawned viruses-spawned infections
		max-hosts max-viruses final-hosts final-viruses))

;; add free starting cell
(define current-scores (game-scores 0 #f 0 0 0 0 0 0 0 0 0))

(define (reset-scores!)
  (set! scores-why "")
  (set! current-scores (game-scores 0 #f 0 0 0 0 0 0 0 0 0)))

(define (update-scores i v)
  (set! current-scores
	(list-replace
	 current-scores i (+ (list-ref current-scores i) v))))

(define (update-total i v)
  (set! current-scores
	(list-replace
	 current-scores i (max 0 (+ (list-ref current-scores i) v)))))

(define (update-scores-total! v) (update-total 0 v))	
(define (update-scores-survived! v) (update-scores 1 v))	
(define (update-scores-duration! v) (update-scores 2 v))	
(define (update-scores-mutations! v)
  (update-scores-total! -v) (update-scores 3 v))	
(define (update-scores-hosts-spawned! v)
  (update-scores-total! 1) (update-scores 4 v))	
(define (update-scores-viruses-spawned! v) (update-scores 5 v))	
(define (update-scores-infections! v)
  (update-scores-total! -2)
  (update-scores 6 v))	
(define (update-scores-max-hosts! v)
  (when (> v (scores-max-hosts))
	(set! current-scores (list-replace current-scores 7 v))))
(define (update-scores-max-viruses! v)
  (when (> v (scores-max-viruses))
	(set! current-scores (list-replace current-scores 8 v))))
(define (update-scores-final-hosts! v) (update-scores 9 v))	
(define (update-scores-final-viruses! v) (update-scores 10 v))	

(define (scores-total) (list-ref current-scores 0))	
(define (scores-survived) (list-ref current-scores 1))	
(define (scores-duration) (list-ref current-scores 2))	
(define (scores-mutations) (list-ref current-scores 3))	
(define (scores-hosts-spawned) (list-ref current-scores 4))	
(define (scores-viruses-spawned) (list-ref current-scores 5))	
(define (scores-infections) (list-ref current-scores 6))	
(define (scores-max-hosts) (list-ref current-scores 7))	
(define (scores-max-viruses) (list-ref current-scores 8))	    	
(define (scores-final-hosts) (list-ref current-scores 9))    	
(define (scores-final-viruses) (list-ref current-scores 10))    	

(define scores-why "")

(define (get-scores-analysis stage)
  (when (eq? scores-why "")
		(set! scores-why (scores-analysis stage)))
  scores-why)

(define (scores-analysis stage)
  (if (scores-survived)
	  ;; the player won
	  (string-append
	   (choose
		(list "Well done! " "You rock! " "Excellent! "))	   
	   (choose
		(append
		 (if (< (scores-final-hosts) 2) (list "You only just made it!")
			 (if (< (scores-final-hosts) 6)
				 (list "Your host population was getting a bit low at the end.")
				 (if (< (scores-max-hosts) 10)
					 (list "Your hosts had a hard time but you made it!") '())))
		 (if (< (scores-infections) 1)
			 (list "WOW - there were no infections!")
			 (if (< (scores-infections) 10)
				 (list "You hardly had any infections.") '()))
		 (if (> (scores-mutations) 20)
			 (list "You had to mutate your hosts a lot.")
			 (if (< (scores-mutations) 5)
				 (list "You only mutated when you had to.") '()))
		 (if (< (scores-max-viruses) 10)
			 (list "You kept virus counts low.")
			 (if (> (scores-max-viruses) 25)
				 (list
				  "You did well to survive with so much virus around."
				  "You managed to keep ahead of the virus evolution."
				  "This virus is no match for your hosts."
				  "You are becoming an expert in immunity.") '())))))
	  
	  ;; game over
	  (string-append
	   (choose
		(list "Bad luck. " "Thats a shame. " "Better luck next time! "))
	   (choose
		(append		 
		 (if (< (scores-mutations) 1)
			 (list "Use the buttons at the bottom to mutate your host.")
			 (if (< (scores-mutations) 10)
				 (list
				  "Your host might need to evolve more quickly to keep up with the virus evolution."
				  "Try mutating more - to start with your host receptors match the virus spike protein shapes.")
				 '()))
		 (if (< (scores-duration) 20)
			 (list "It's not always that hard. Try mutating sooner next time.")
			 (if (< (scores-duration) 30)
				 (list
				  (if (not (eq? stage 3))
					  "Keep an eye on the virus spike protein shapes."
					  "Can you work out the virus shapes from the infected hosts?"))
				 (if (> (scores-duration) 40)
					 (list "You nearly made it!") '())))		
		 (if (< (scores-max-hosts) 10)
			 (list "You need to increase your host population to make it easier to survive.") '())
		 (if (> (scores-max-viruses) 25)
			 (list "Its easier if you can manage to keep the number of viruses down to a minimum."
				   "Try changing the host's shapes so none of them match the virus."
				   "Try mutating until none of your host shapes match the virus shapes.") '()))))))

