;; -*- mode: scheme; -*-
;; Viruscraft Copyright (C) 2019 FoAM Kernow

;; a stack of helpful tips!

(define (make-help-bubble text code x y bg-image timeout)
  (list text code x y (find-image bg-image) timeout))

(define (help-bubble-text b) (list-ref b 0))
(define (help-bubble-code b) (list-ref b 1))
(define (help-bubble-x b) (list-ref b 2))
(define (help-bubble-y b) (list-ref b 3))
(define (help-bubble-bg-image b) (list-ref b 4))
(define (help-bubble-timeout b) (list-ref b 5))

(define (help-bubble-update-pos b pos)
  (list
   (help-bubble-text b)
   (help-bubble-code b)
   (vx pos)
   (vy pos)
   (help-bubble-bg-image b)
   (help-bubble-timeout b)))

(define (help-bubble-render! b ctx)
  (ctx.drawImage 
   (help-bubble-bg-image b)
   (help-bubble-x b)
   (help-bubble-y b))
  (set! ctx.font "28pt Dosis")
  (wrap-centred-text 
   ctx 
   (help-bubble-text b) 
   (+ 195 (help-bubble-x b))
   (+ 53 (help-bubble-y b))
   330 40))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(define (make-help-bubble-stack bubbles last-time started organism)
  (list bubbles last-time started organism))

(define (help-bubble-stack-list b) (list-ref b 0))
(define (help-bubble-stack-last-time b) (list-ref b 1))
(define (help-bubble-stack-started b) (list-ref b 2))
(define (help-bubble-stack-organism b) (list-ref b 3))

(define (help-bubble-stack-update-organism b organism)
  (make-help-bubble-stack 
   (help-bubble-stack-list b)
   (help-bubble-stack-last-time b)
   (help-bubble-stack-started b)
   organism))

;; drop the top of the stack
(define (help-bubble-stack-drop b time)
  (make-help-bubble-stack 
   (cdr (help-bubble-stack-list b))
   time
   (help-bubble-stack-started b)
   (help-bubble-stack-organism b)))

;; drop the top of the stack
(define (help-bubble-stack-start b time)
  (make-help-bubble-stack 
   (help-bubble-stack-list b)
   time
   #t
   (help-bubble-stack-organism b)))

(define (help-bubble-stack-trigger b code time)
  (if (and
       (not (null? b))
       (not (null? (help-bubble-stack-list b)))
       (eq? (help-bubble-code 
	     (car (help-bubble-stack-list b)))
	    code))
      (help-bubble-stack-drop b time)
      b))

;; drop the top of the stack
(define (help-bubble-stack-update-top b bubble)
  (make-help-bubble-stack 
   (cons bubble (cdr (help-bubble-stack-list b)))
   (help-bubble-stack-last-time b)
   (help-bubble-stack-started b)
   (help-bubble-stack-organism b)))

(define (help-bubble-stack-update b time) 
  (cond
   ((null? b) b)
   ((null? (help-bubble-stack-list b)) b)
   ((not (help-bubble-stack-started b)) b)
   ((> time (+ (help-bubble-timeout (car (help-bubble-stack-list b))) 
		 (help-bubble-stack-last-time b)))
    (help-bubble-stack-drop b time))
   (else b)))

(define (render-bubble-stack! b ctx)
  (when (and (help-bubble-stack-started b)
	     (not (null? (help-bubble-stack-list b))))
	(help-bubble-render! (car (help-bubble-stack-list b)) ctx)))

;; (define (help-bubble-stack-update-infected-organism b g organism)
;;   (cond
;;    ((or (not (help-bubble-stack-started b))
;; 	(null? (help-bubble-stack-list b)))
;;     b)
;;    ;; if the top one is infection
;;    ((eq? (help-bubble-code (car (help-bubble-stack-list b))) 'infected-host)
;;     (help-bubble-stack-update-top 
;;      ;; only update if this is the first time we have an organism
;;      (if (not (help-bubble-stack-organism b))
;; 	 (help-bubble-stack-update-organism b organism)
;; 	 b)
;;      (help-bubble-update-pos 
;;       (car (help-bubble-stack-list b)) 
;;       (vadd (vector 20 -52 0) 
;; 	    (organism-pos g (help-bubble-stack-organism b))))))
;;    (else b)))
